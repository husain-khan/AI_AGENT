import boto3

# Your credentials (replace with correct ones before running)
aws_access_key_id = "###########"
aws_secret_access_key = "#######"
region_name = "us-east-1"

# IAM Role ARN provided by the user
role_arn = "arn:aws:iam::#######:role/testing-role1"

# Assume the IAM Role
sts_client = boto3.client(
    "sts",
    aws_access_key_id=aws_access_key_id,
    aws_secret_access_key=aws_secret_access_key,
    region_name=region_name
)

assumed_role = sts_client.assume_role(
    RoleArn=role_arn,
    RoleSessionName="AutomatedEC2Session"
)

# Extract temporary credentials
credentials = assumed_role['Credentials']
session = boto3.Session(
    aws_access_key_id=credentials['AccessKeyId'],
    aws_secret_access_key=credentials['SecretAccessKey'],
    aws_session_token=credentials['SessionToken'],
    region_name=region_name
)

# EC2 Client using assumed role credentials
ec2_client = session.client("ec2")

# Create a new EC2 instance
instance_response = ec2_client.run_instances(
    ImageId="ami-0c7217cdde317cfec",  # Example Amazon Linux 2 AMI
    InstanceType="t2.micro",
    MinCount=1,
    MaxCount=1,
    # KeyName="your-key-pair",  # Ensure this key pair exists in the AWS account
    TagSpecifications=[{
        'ResourceType': 'instance',
        'Tags': [{'Key': 'Name', 'Value': 'AutomatedEC2Instance'}]
    }]
)

print("EC2 Instance Created Successfully!")
print("Instance ID:", instance_response['Instances'][0]['InstanceId'])
